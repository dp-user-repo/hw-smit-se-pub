name: Setup GKE Cluster

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      cluster_name:
        description: 'GKE Cluster Name'
        required: true
        default: 'vlan-api-cluster'
      zone:
        description: 'GCP Zone'
        required: true
        default: 'us-central1-a'
      node_count:
        description: 'Number of worker nodes'
        required: true
        default: '2'

jobs:
  create-cluster:
    name: Create GKE Cluster
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Install GKE auth plugin
      run: |
        echo "Installing GKE auth plugin..."
        gcloud components install gke-gcloud-auth-plugin --quiet
        echo "Verifying plugin installation..."
        gke-gcloud-auth-plugin --version || echo "Plugin verification failed but continuing..."
        
    - name: Enable required APIs
      run: |
        gcloud services enable container.googleapis.com
        gcloud services enable compute.googleapis.com
        
    - name: Check if cluster exists
      id: cluster-check
      run: |
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True
        if gcloud container clusters describe ${{ github.event.inputs.cluster_name }} --zone ${{ github.event.inputs.zone }} --project ${{ secrets.GCP_PROJECT_ID }} > /dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Cluster ${{ github.event.inputs.cluster_name }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Cluster ${{ github.event.inputs.cluster_name }} does not exist"
        fi
        
    - name: Create GKE cluster
      if: steps.cluster-check.outputs.exists == 'false'
      run: |
        gcloud container clusters create ${{ github.event.inputs.cluster_name }} \
          --zone ${{ github.event.inputs.zone }} \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --machine-type e2-micro \
          --num-nodes ${{ github.event.inputs.node_count }} \
          --disk-size 20GB \
          --enable-autorepair \
          --enable-autoupgrade \
          --max-nodes 4 \
          --min-nodes 1 \
          --enable-autoscaling
          
    - name: Get cluster credentials
      run: |
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True
        gcloud container clusters get-credentials ${{ github.event.inputs.cluster_name }} --zone ${{ github.event.inputs.zone }} --project ${{ secrets.GCP_PROJECT_ID }}
        
    - name: Verify cluster
      run: |
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True
        kubectl get nodes
        kubectl get all --all-namespaces
        
    - name: Display cluster info
      run: |
        echo "GKE Cluster Created Successfully!"
        echo "=================================="
        echo "Cluster Name: ${{ github.event.inputs.cluster_name }}"
        echo "Zone: ${{ github.event.inputs.zone }}"
        echo "Project: ${{ secrets.GCP_PROJECT_ID }}"
        echo "Nodes: ${{ github.event.inputs.node_count }}"
        echo ""
        echo "CI/CD pipeline is now ready"
        echo "Push to main branch to trigger deployment"
        echo ""
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True
        gcloud container clusters describe ${{ github.event.inputs.cluster_name }} --zone ${{ github.event.inputs.zone }} --format="value(endpoint)" | xargs -I {} echo "Cluster endpoint: {}"
        
